name: CI/CD Pipeline

on:
  pull_request:
    branches: [main]
    paths-ignore:
      - README.md
      - docs/**
      - .github/ISSUE_TEMPLATE/**
  push:
    branches: [main]
    paths-ignore:
      - README.md
      - docs/**
      - .github/ISSUE_TEMPLATE/**
  workflow_dispatch:
  release:
    types: [published]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'

jobs:
  lint-and-typecheck:
    name: Lint & Types (PR)
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - run: npm run lint
      - run: npm run check-types

  build:
    name: Build (main)
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - run: npm run build

  migrations:
    name: Apply DB Migrations (main)
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Apply Supabase migrations via Management API
        shell: bash
        env:
          SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          set -euo pipefail
          SUPABASE_PROJECT_REF=$(echo "$SUPABASE_URL" | sed 's|https://\([^.]*\)\.supabase\.co.*|\1|')
          
          # Apply main jobs table migration
          echo "Applying jobs table migration..."
          SQL=$(cat migrations/20250916192842_alphogen_jobs.sql)
          curl -sS -X POST "https://api.supabase.com/v1/projects/${SUPABASE_PROJECT_REF}/database/query" \
            -H "Authorization: Bearer ${SUPABASE_ACCESS_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "{\"query\": $(printf '%s' "$SQL" | jq -Rs .)}" \
            --fail-with-body
          
          # Apply result_key column migration
          echo "Applying result_key column migration..."
          SQL=$(cat migrations/20250917000000_add_result_key_to_jobs.sql)
          curl -sS -X POST "https://api.supabase.com/v1/projects/${SUPABASE_PROJECT_REF}/database/query" \
            -H "Authorization: Bearer ${SUPABASE_ACCESS_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "{\"query\": $(printf '%s' "$SQL" | jq -Rs .)}" \
            --fail-with-body

  admin-setup:
    name: Setup Admin User (main)
    needs: migrations
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - name: Create admin user
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          ADMIN_BOOT_PWD: ${{ secrets.ADMIN_BOOT_PWD }}
        run: node scripts/create-digitalpaho-admin.js

  e2e-smoke:
    name: E2E Smoke (main)
    needs: admin-setup
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - name: Run comprehensive E2E test
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          ADMIN_BOOT_PWD: ${{ secrets.ADMIN_BOOT_PWD }}
        run: node scripts/e2e-production-test.js

  deploy-production:
    name: Deploy Production (main)
    needs: e2e-smoke
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Deploy to Vercel with cache clear
        run: |
          npm install -g vercel
          vercel --token "${{ secrets.VERCEL_TOKEN }}" --prod --yes --scope "${{ secrets.VERCEL_ORG_ID }}" --force
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  e2e-full:
    name: E2E Full (release)
    needs: migrations
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
      - run: npm ci
      - run: npm run e2e
