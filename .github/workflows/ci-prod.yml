name: ci-prod
on: { workflow_dispatch: {} }

permissions:
  id-token: write
  contents: read

env:
  CF_ACCOUNT_ID: a3ac983a6a5ce4bb150638e1f620c2a7
  CF_ZONE_ID: 824fa72287d21dd30f97f188f650d6b7

  WORKER_NAME: alphogenai-worker
  PAGES_PROJECT_PROD: alphogenai-app
  API_HOST_PROD: api.alphogen.com  # info

jobs:
  test_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: "20" }
      - name: Install app deps (Pages)
        if: hashFiles('app/**') != ''
        working-directory: app
        run: npm ci || npm i
      - name: Build app (Pages)
        if: hashFiles('app/**') != ''
        working-directory: app
        run: npm run build --if-present
      - name: Install worker deps
        if: hashFiles('workers/**') != ''
        working-directory: workers
        run: npm ci || npm i
      - name: Typecheck worker
        if: hashFiles('workers/**') != ''
        working-directory: workers
        run: npm run typecheck --if-present

  infra_deploy:
    runs-on: ubuntu-latest
    needs: test_build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: "20" }
      - name: Setup Pulumi CLI
        uses: pulumi/setup-pulumi@v2
      - name: Install infra deps
        if: hashFiles('infra/**') != ''
        working-directory: infra
        run: npm ci || npm i
      - name: Build infra (ts -> js)
        if: hashFiles('infra/**') != ''
        working-directory: infra
        run: npm run build
      - name: Ensure Pulumi stack (prod)
        if: hashFiles('infra/**') != ''
        working-directory: infra
        env: { PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }} }
        run: |
          pulumi stack select prod || pulumi stack init prod
          pulumi config set cfAccountId  $CF_ACCOUNT_ID --stack prod
          pulumi config set cfZoneId     $CF_ZONE_ID    --stack prod
          pulumi config set cfR2Bucket   alphogenai-r2-prod --stack prod
      - name: Pulumi up (prod)
        if: hashFiles('infra/**') != ''
        uses: pulumi/actions@v4
        with:
          command: up
          stack-name: prod
          work-dir: infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          PULUMI_CONFIG_PASSPHRASE: ""
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

  app_deploy:
    runs-on: ubuntu-latest
    needs: [ test_build, infra_deploy ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: "20" }
      - name: Install Wrangler
        run: npm i -g wrangler
      - name: Ensure worker deps
        if: hashFiles('workers/**') != ''
        working-directory: workers
        run: npm ci || npm i
      - name: Deploy Worker (prod)
        if: hashFiles('workers/**') != ''
        working-directory: workers
        env: { CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }} }
        run: wrangler deploy --env prod --name "$WORKER_NAME"
      - name: Publish Pages (prod)
        if: hashFiles('app/**') != ''
        working-directory: app
        env: { CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }} }
        run: npx wrangler pages deploy ./out --project-name "$PAGES_PROJECT_PROD"
