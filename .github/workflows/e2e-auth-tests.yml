name: E2E Authentication Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  e2e_auth_tests:
    runs-on: ubuntu-latest
    needs: [apply_migrations, deploy_worker]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Wait for deployment
        run: sleep 30
      
      - name: Test health endpoint
        run: |
          echo "=== Testing health endpoint ==="
          HEALTH_RESPONSE=$(curl -s https://api.alphogen.com/health)
          echo "Health response: $HEALTH_RESPONSE"
          
          # Check if JWT is configured
          JWT_CONFIGURED=$(echo "$HEALTH_RESPONSE" | jq -r '.jwt_configured')
          if [ "$JWT_CONFIGURED" != "true" ]; then
            echo "ERROR: JWT not configured"
            exit 1
          fi
          
          # Check if Supabase is configured
          SUPABASE_CONFIGURED=$(echo "$HEALTH_RESPONSE" | jq -r '.supabase_configured')
          if [ "$SUPABASE_CONFIGURED" != "true" ]; then
            echo "ERROR: Supabase not configured"
            exit 1
          fi
          
          echo "âœ… Health endpoint OK"
      
      - name: Test signup â†’ login â†’ create job flow
        run: |
          echo "=== Testing complete auth flow ==="
          
          # Generate unique test email
          TEST_EMAIL="e2e-test-$(date +%s)@example.com"
          TEST_PASSWORD="testpass123"
          
          echo "Testing with email: $TEST_EMAIL"
          
          # Test signup
          echo "=== Testing signup ==="
          SIGNUP_RESPONSE=$(curl -s -X POST https://api.alphogen.com/api/auth/signup \
            -H "Content-Type: application/json" \
            -d "{\"email\":\"$TEST_EMAIL\",\"password\":\"$TEST_PASSWORD\"}")
          
          echo "Signup response: $SIGNUP_RESPONSE"
          
          # Extract user ID and token from signup
          SIGNUP_TOKEN=$(echo "$SIGNUP_RESPONSE" | jq -r '.token')
          USER_ID=$(echo "$SIGNUP_RESPONSE" | jq -r '.user.id')
          
          if [ "$SIGNUP_TOKEN" = "null" ] || [ -z "$SIGNUP_TOKEN" ]; then
            echo "ERROR: Signup failed - no token received"
            echo "Response: $SIGNUP_RESPONSE"
            exit 1
          fi
          
          echo "âœ… Signup successful, user ID: $USER_ID"
          
          # Test login
          echo "=== Testing login ==="
          LOGIN_RESPONSE=$(curl -s -X POST https://api.alphogen.com/api/auth/login \
            -H "Content-Type: application/json" \
            -d "{\"email\":\"$TEST_EMAIL\",\"password\":\"$TEST_PASSWORD\"}")
          
          echo "Login response: $LOGIN_RESPONSE"
          
          LOGIN_TOKEN=$(echo "$LOGIN_RESPONSE" | jq -r '.token')
          
          if [ "$LOGIN_TOKEN" = "null" ] || [ -z "$LOGIN_TOKEN" ]; then
            echo "ERROR: Login failed - no token received"
            echo "Response: $LOGIN_RESPONSE"
            exit 1
          fi
          
          echo "âœ… Login successful"
          
          # Test job creation
          echo "=== Testing job creation ==="
          JOB_RESPONSE=$(curl -s -X POST https://api.alphogen.com/api/jobs \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $LOGIN_TOKEN" \
            -d '{"prompt":"E2E test video generation"}')
          
          echo "Job response: $JOB_RESPONSE"
          
          JOB_ID=$(echo "$JOB_RESPONSE" | jq -r '.job.id')
          
          if [ "$JOB_ID" = "null" ] || [ -z "$JOB_ID" ]; then
            echo "ERROR: Job creation failed"
            echo "Response: $JOB_RESPONSE"
            exit 1
          fi
          
          echo "âœ… Job created successfully, ID: $JOB_ID"
          
          # Test job retrieval
          echo "=== Testing job retrieval ==="
          GET_JOB_RESPONSE=$(curl -s -X GET "https://api.alphogen.com/api/jobs/$JOB_ID" \
            -H "Authorization: Bearer $LOGIN_TOKEN")
          
          echo "Get job response: $GET_JOB_RESPONSE"
          
          JOB_STATUS=$(echo "$GET_JOB_RESPONSE" | jq -r '.job.status')
          
          if [ "$JOB_STATUS" = "null" ] || [ -z "$JOB_STATUS" ]; then
            echo "ERROR: Job retrieval failed"
            echo "Response: $GET_JOB_RESPONSE"
            exit 1
          fi
          
          echo "âœ… Job retrieved successfully, status: $JOB_STATUS"
          
          # Test job listing
          echo "=== Testing job listing ==="
          LIST_JOBS_RESPONSE=$(curl -s -X GET "https://api.alphogen.com/api/jobs" \
            -H "Authorization: Bearer $LOGIN_TOKEN")
          
          echo "List jobs response: $LIST_JOBS_RESPONSE"
          
          JOBS_COUNT=$(echo "$LIST_JOBS_RESPONSE" | jq '.jobs | length')
          
          if [ "$JOBS_COUNT" -lt 1 ]; then
            echo "ERROR: Job listing failed - no jobs found"
            echo "Response: $LIST_JOBS_RESPONSE"
            exit 1
          fi
          
          echo "âœ… Job listing successful, found $JOBS_COUNT jobs"
          echo "ðŸŽ‰ Complete auth flow test passed!"
