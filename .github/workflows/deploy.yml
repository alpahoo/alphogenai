name: deploy

on:
  push:
    branches: [ "main", "stabilize-rp-worker" ]
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read

env:
  NODE_VERSION: '20'
  CF_ACCOUNT_ID: a3ac983a6a5ce4bb150638e1f620c2a7
  CF_ZONE_ID: 824fa72287d21dd30f97f188f650d6b7
  WORKER_NAME: alphogenai-worker

jobs:
  test_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      # App (Pages) - si dossier app/ existe
      - name: Install app deps
        if: hashFiles('app/**') != ''
        working-directory: app
        run: npm ci || npm i

      - name: Build app
        if: hashFiles('app/**') != ''
        working-directory: app
        run: |
          npm run build --if-present
          npm run export --if-present || echo "no static export"

  worker_deploy:
    runs-on: ubuntu-latest
    needs: test_build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Wrangler
        run: npm i -g wrangler

      - name: Ensure worker deps
        if: hashFiles('workers/**') != ''
        working-directory: workers
        run: npm ci || npm i

      - name: Deploy Worker (no route changes)
        if: hashFiles('workers/**') != ''
        working-directory: workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: |
          wrangler secret put APP_ADMIN_TOKEN <<< "${{ secrets.APP_ADMIN_TOKEN }}"
          wrangler secret put WEBHOOK_SECRET <<< "${{ secrets.WEBHOOK_SECRET }}"
          wrangler secret put RUNPOD_API_KEY <<< "${{ secrets.RUNPOD_API_KEY }}"
          wrangler secret put RUNPOD_ENDPOINT_ID <<< "${{ secrets.RUNPOD_ENDPOINT_ID }}"
          wrangler deploy --minify --name "$WORKER_NAME"

  pages_deploy:
    runs-on: ubuntu-latest
    needs: test_build
    if: hashFiles('app/out/**') != ''
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Wrangler
        run: npm i -g wrangler@3
      - name: Deploy Pages
        working-directory: app
        env:
          CLOUDFLARE_ACCOUNT_ID: a3ac983a6a5ce4bb150638e1f620c2a7
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
        run: npx wrangler pages deploy ./out --project-name alphogen-app
# Trigger deployment - Thu Sep  4 23:41:29 UTC 2025
